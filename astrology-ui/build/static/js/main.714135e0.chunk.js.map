{"version":3,"sources":["astrology-api/index.ts","astrology-api/astrology-login.ts","components/LoginComponent/LoginComponent.tsx","components/NavBarComponent/NavBarComponent.tsx","astrology-api/astrology-get-user-by-id.ts","components/UserDisplayComponent/UserDisplayComponent.tsx","components/ProfileComponent/ProfileComponent.tsx","components/HomeComponent/HomeComponent.tsx","astrology-api/astrology-sign-up.ts","components/SignUpComponent/SignUpComponent.tsx","astrology-api/astrology-update-user.ts","components/UpdateProfileComponent/UpdateProfileComponent.tsx","astrology-api/astrology-logout.ts","components/LogoutComponent/LogoutComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["astrologyClient","axios","create","baseURL","headers","withCredentials","astrologyLogin","username","password","a","credentials","post","response","console","log","data","LoginComponent","props","classes","useStyles","useState","changeUsername","changePassword","loginSubmit","e","preventDefault","res","userId","changeCurrentUser","history","push","toast","error","Container","component","maxWidth","CssBaseline","className","paper","Typography","variant","autoComplete","onSubmit","form","noValidate","Grid","container","spacing","item","xs","TextField","margin","required","fullWidth","id","label","name","value","onChange","event","currentTarget","type","sm","CustomButton","submit","to","style","textDecoration","withStyles","theme","root","color","palette","getContrastText","backgroundColor","Button","makeStyles","marginTop","display","flexDirection","alignItems","avatar","secondary","main","width","fontSize","media","flexGrow","background","menuButton","marginRight","title","fontFamily","NavBarComponent","React","anchorEl","setAnchorEl","handleClose","Boolean","menuItems","useEffect","user","MenuItem","onClick","AppBar","position","Toolbar","IconButton","edge","aria-label","keepMounted","open","onClose","astrologyGetUserById","get","minWidth","height","userInfo","UserDisplayComponent","Card","CardContent","CardMedia","alt","image","gutterBottom","firstName","lastName","email","role","ProfileComponent","userProfile","changeUserProfile","useParams","getUser","SignUpButton","justifyContent","text","HomeComponent","CardActions","astrologySignUp","SignUpComponent","confirmPassword","changeConfirmPassword","changeFirstName","changeLastName","changeEmail","changeImage","submitUser","newUser","htmlFor","accept","file","files","reader","FileReader","readAsDataURL","onload","result","src","astrologyUpdateUser","patch","UpdateProfileComponent","updateUser","updatedUser","astrologyLogOut","delete","LogOutComponent","logoutUser","App","currentUser","path","render","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"qPAOaA,E,OAAkBC,EAAMC,OAAQ,CACzCC,QAAS,wBACTC,QAAQ,CACJ,eAAgB,oBAEpBC,iBAAgB,ICVPC,EAAc,uCAAG,WAAOC,EAAkBC,GAAzB,iBAAAC,EAAA,6DACtBC,EAAc,CACdH,WACAC,YAHsB,kBAMDR,EAAgBW,KAAK,SAAUD,GAN9B,cAMlBE,EANkB,OAOtBC,QAAQC,IAAIF,GAPU,kBAQfA,EAASG,MARM,uCAUtBF,QAAQC,IAAR,MAVsB,kBAWd,oBAXc,yDAAH,wD,sECSdE,EAAgD,SAACC,GAC1D,IAAMC,EAAUC,IADoD,EAEjCC,mBAAS,IAFwB,mBAE7Db,EAF6D,KAEnDc,EAFmD,OAGjCD,mBAAS,IAHwB,mBAG7DZ,EAH6D,KAGnDc,EAHmD,KAe9DC,EAAW,uCAAG,WAAOC,GAAP,eAAAf,EAAA,6DAChBe,EAAEC,iBADc,SAEAnB,EAAeC,EAAUC,GAFzB,OAEZkB,EAFY,OAGhBb,QAAQC,IAAIY,GAEPA,EAAIC,QAILV,EAAMW,kBAAkBF,GACxBT,EAAMY,QAAQC,KAAd,wBAAoCJ,EAAIC,WAJxCI,IAAMC,MAAM,gDACZf,EAAMY,QAAQC,KAAd,WAPY,2CAAH,sDAcjB,OACI,kBAACG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACrC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWnB,EAAQoB,OACpB,kBAACC,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAAnC,WAGA,0BAAMC,aAAa,MAAMC,SAAUnB,EAAac,UAAWnB,EAAQyB,KAAMC,YAAU,GACnF,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,kBAACC,EAAA,EAAD,CACIV,QAAQ,WACRW,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNC,KAAK,WACLC,MAAOlD,EACPmD,SAtCO,SAACC,GACpBA,EAAMlC,iBACNJ,EAAesC,EAAMC,cAAcH,WAuC3B,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,kBAACC,EAAA,EAAD,CACIV,QAAQ,WACRW,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNM,KAAK,WACLP,GAAG,WACHG,MAAOjD,EACPkD,SAzDO,SAACC,GACpBA,EAAMlC,iBACNH,EAAeqC,EAAMC,cAAcH,WA0D3B,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACvB,kBAACC,EAAD,CACIF,KAAK,SACLR,WAAS,EACTb,QAAQ,YACRH,UAAWnB,EAAQ8C,QAJvB,WAQA,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACvB,kBAAC,IAAD,CAAMG,GAAI,QAAQC,MAAO,CAAEC,eAAe,SAC1C,kBAACJ,EAAD,CACIF,KAAK,SACLR,WAAS,EACTb,QAAQ,YACRH,UAAWnB,EAAQ8C,QAJvB,kBAiBVD,EAAeK,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,CACFC,MAAOF,EAAMG,QAAQC,gBAAgB,WACrCC,gBAAiB,YACjB,UAAW,CACTA,gBAAiB,eALNN,CAQfO,KAGAxD,EAAYyD,aAAW,SAACP,GAAD,MAAY,CACrC/B,MAAO,CACHuC,UAAWR,EAAMtB,QAAQ,GACzB+B,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJ9B,OAAQkB,EAAMtB,QAAQ,GACtB2B,gBAAiBL,EAAMG,QAAQU,UAAUC,MAE7CxC,KAAM,CACFyC,MAAO,OACPP,UAAWR,EAAMtB,QAAQ,IAE7BiB,OAAQ,CACJb,OAAQkB,EAAMtB,QAAQ,EAAG,EAAG,GAC5B2B,gBAAiB,UACjBH,MAAO,SACPc,SAAU,IAEdC,MAAO,O,6DC5HLnE,EAAYyD,aAAW,SAACP,GAAD,MAAY,CACvCC,KAAM,CACJiB,SAAU,EACVC,WAAY,WAEdC,WAAY,CACVC,YAAarB,EAAMtB,QAAQ,IAE7B4C,MAAO,CACLJ,SAAU,EACVK,WAAY,cAIHC,EAAyC,SAAC5E,GACrD,IAAMC,EAAUC,IAD+C,EAE/B2E,IAAM1E,SAA6B,MAFJ,mBAExD2E,EAFwD,KAE9CC,EAF8C,KASzDC,GANOC,QAAQH,GAMD,WAClBC,EAAY,QAGVG,EAAY,GAwBd,OAvBFC,qBAAU,WACa,OAAfnF,EAAMoF,OACRF,EAAY,IACFrE,KACR,kBAAC,IAAD,CAAMmC,GAAI,SAASC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,UACpD,kBAAC,IAAD,CAAMhC,GAAI,YAAYC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,YACvD,kBAAC,IAAD,CAAMhC,GAAI,QAAQC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,aAIvDhF,EAAMoF,KACRF,EAAUrE,KACR,kBAAC,IAAD,CAAMmC,GAAI,QAAQC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,SACnD,kBAAC,IAAD,CAAMhC,GAAE,wBAAoBhD,EAAMoF,KAAMpF,EAAMoF,KAAK1E,OAAS,KAAQuC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,iBACrG,kBAAC,IAAD,CAAMhC,GAAE,uBAAoBhD,EAAMoF,KAAMpF,EAAMoF,KAAK1E,OAAS,KAAQuC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,yBACrG,kBAAC,IAAD,CAAMhC,GAAG,UAAUC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,YAEtDE,EAAUrE,KACR,kBAAC,IAAD,CAAMmC,GAAI,QAAQC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,SACnD,kBAAC,IAAD,CAAMhC,GAAI,SAASC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,UACpD,kBAAC,IAAD,CAAMhC,GAAI,YAAYC,MAAO,CAAEC,eAAe,SAAS,kBAACmC,EAAA,EAAD,CAAUC,QAASN,GAAnB,aAIvD,6BACE,kBAACO,EAAA,EAAD,CAAQC,SAAS,SAASpE,UAAWnB,EAAQoD,MAC3C,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYJ,QApCF,SAAC5C,GACnBqC,EAAYrC,EAAMC,gBAmCwBgD,KAAK,QAAQvE,UAAWnB,EAAQuE,WAAYlB,MAAM,UAAUsC,aAAW,QACvG,kBAAC,IAAD,OAEA,kBAAC,IAAD,CAAMvD,GAAG,cACTyC,SAAUA,EACVe,aAAW,EACXC,KAAMb,QAAQH,GACdiB,QAASf,GACRE,GAEH,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWnB,EAAQyE,OAA5C,0BC3ECsB,EAAoB,uCAAG,WAAOtF,GAAP,eAAAlB,EAAA,+EAEPT,EAAgBkH,IAAhB,iBAA8BvF,IAFvB,cAExBf,EAFwB,yBAGrBA,EAASG,MAHY,gCAK5BF,QAAQC,IAAR,MACAD,QAAQC,IAAI,kCANgB,yDAAH,sD,2BCK3BK,EAAYyD,YAAW,CAC3BN,KAAM,CACJnB,OAAQ,OACRgE,SAAU,IACVhF,SAAS,KAEXmD,MAAO,CACL8B,OAAO,OACPhC,MAAO,OACPjC,OAAQ,QAEV5C,SAAU,CACR8E,SAAU,GACVO,WAAY,UAEdyB,SAAU,CACR9C,MAAO,gBACPqB,WAAY,YAIH0B,EAA6D,SAACrG,GACvE,IAAIC,EAAUC,IACd,OACE,kBAACoG,EAAA,EAAD,CAAMlF,UAAWnB,EAAQoD,MACvB,kBAACkD,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CACEvF,UAAY,MACZG,UAAWnB,EAAQoE,MACnBoC,IAAI,kBACJC,MAAO1G,EAAMoF,KAAKsB,QAElB,kBAACpF,EAAA,EAAD,CAAYF,UAAWnB,EAAQX,SAAUqH,cAAY,GAArD,cACc3G,EAAMoF,KAAK9F,UAEzB,kBAACgC,EAAA,EAAD,CAAYF,UAAWnB,EAAQmG,UAA/B,cACcpG,EAAMoF,KAAK7F,UAEzB,kBAAC+B,EAAA,EAAD,CAAYF,UAAWnB,EAAQmG,UAA/B,gBACkBpG,EAAMoF,KAAKwB,WAE7B,kBAACtF,EAAA,EAAD,CAAYF,UAAWnB,EAAQmG,UAA/B,eACiBpG,EAAMoF,KAAKyB,UAE5B,kBAACvF,EAAA,EAAD,CAAYF,UAAWnB,EAAQmG,UAA/B,WACapG,EAAMoF,KAAK0B,OAExB,kBAACxF,EAAA,EAAD,CAAYF,UAAWnB,EAAQmG,UAA/B,UACYpG,EAAMoF,KAAK2B,SChDpBC,EAA0C,SAAChH,GAAW,IAAD,EACvBG,mBAAsB,MADC,mBACzD8G,EADyD,KAC5CC,EAD4C,KAEzDxG,EAAUyG,cAAVzG,OAmBL,OAhBAyE,qBAAU,WAEN,IAAIiC,EAAO,uCAAG,4BAAA5H,EAAA,sEAEWwG,EAAqBtF,GAFhC,OAEN0F,EAFM,OAGVc,EAAkBd,GAHR,2CAAH,qDAMPa,GAAeA,EAAYvG,UAAYA,GAEvC0G,OAOHH,EACD,kBAAC,EAAD,CAAsB7B,KAAM6B,IAE5B,6BACI,gD,SC1BNI,EAAelE,aAAW,SAACC,GAAD,MAAY,CAC1CC,KAAM,CACJC,MAAOF,EAAMG,QAAQC,gBAAgB,WACrCC,gBAAiB,YACjB,UAAW,CACTA,gBAAiB,eALFN,CAQjBO,KAEExD,EAAYyD,aAAW,SAACP,GAAD,MAAY,CACvCC,KAAM,CACJnB,OAAQ,OACRhB,SAAU,IACVoG,eAAgB,UAElBC,KAAM,CACJ5C,WAAW,SACXrB,MAAM,SAERP,OAAQ,CACNb,OAAQkB,EAAMtB,QAAQ,GACtB2B,gBAAiB,UACjBH,MAAO,SACPqB,WAAY,SACZP,SAAU,QAIDoD,EAAuC,SAACxH,GACnD,IAAMC,EAAUC,IAEhB,OACE,kBAACoG,EAAA,EAAD,CAAMlF,UAAWnB,EAAQoD,MAGrB,kBAACkD,EAAA,EAAD,KACI,kBAACjF,EAAA,EAAD,CAAYqF,cAAY,EAACpF,QAAQ,KAAKN,UAAU,KAAKG,UAAWnB,EAAQsH,MAAxE,iBAGA,kBAACjG,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAU,IAAIG,UAAWnB,EAAQsH,MAA7D,0IAIJ,kBAACE,EAAA,EAAD,CAAarG,UAAWnB,EAAQoD,MAC5B,kBAAC,IAAD,CAAML,GAAI,YAAYC,MAAO,CAAEC,eAAe,SAAS,kBAACmE,EAAD,CAAc9F,QAAQ,YAAYH,UAAWnB,EAAQ8C,QAArD,kBAD3D,OAIS,kBAAC,IAAD,CAAMC,GAAG,SAAS5B,UAAWnB,EAAQsH,MAArC,YCpDJG,EAAe,uCAAG,WAAOtC,GAAP,eAAA5F,EAAA,sEAGvBI,QAAQC,IAAIuF,GAHW,SAIFrG,EAAgBW,KAAK,YAAa0F,GAJhC,cAInBzF,EAJmB,OAKvBC,QAAQC,IAAIF,GALW,kBAMhBA,EAASG,MANO,gCAQvBF,QAAQC,IAAR,MARuB,yDAAH,sDCSf8H,EAAkD,SAAC3H,GAC5D,IAAMC,EAAUC,IADqD,EAGpCC,mBAAS,IAH2B,mBAGhEb,EAHgE,KAGtDc,EAHsD,OAIpCD,mBAAS,IAJ2B,mBAIhEZ,EAJgE,KAItDc,EAJsD,OAKtBF,mBAAS,IALa,mBAKhEyH,EALgE,KAK/CC,EAL+C,OAMlC1H,mBAAS,IANyB,mBAMhEyG,EANgE,KAMrDkB,EANqD,OAOpC3H,mBAAS,IAP2B,mBAOhE0G,EAPgE,KAOtDkB,EAPsD,OAQ1C5H,mBAAS,IARiC,mBAQhE2G,EARgE,KAQzDkB,EARyD,OAS1C7H,mBAAS,MATiC,mBAShEuG,EATgE,KASzDuB,EATyD,KAiD/DC,EAAU,uCAAG,WAAO3H,GAAP,iBAAAf,EAAA,yDACfe,EAAEC,iBACCjB,IAAaqI,EAFD,gBAGX9G,IAAMC,MAAM,mCAHD,8BAKPoH,EAAgB,CAChBzH,OAAQ,EACRpB,WACAC,WACAqH,YACAC,WACAC,QAEAC,KAAM,OACNL,SAdO,SAgBKgB,EAAgBS,GAhBrB,OAgBP1H,EAhBO,OAiBXT,EAAMW,kBAAkBF,GACxBT,EAAMY,QAAQC,KAAd,wBAAoCJ,EAAIC,SAlB7B,4CAAH,sDAqBhB,OACI,kBAACM,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACrC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWnB,EAAQoB,OACtB,kBAACC,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAAnC,YAGA,0BAAMC,aAAa,MAAMC,SAAUyG,EAAY9G,UAAWnB,EAAQyB,KAAMC,YAAU,GAChF,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEV,QAAQ,WACRW,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNC,KAAK,WACLC,MAAOlD,EACPmD,SA9ES,SAAClC,GACpBA,EAAEC,iBACFJ,EAAeG,EAAEoC,cAAcH,WA+EzB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAACZ,EAAA,EAAD,CACEV,QAAQ,WACRW,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNM,KAAK,WACLP,GAAG,WACHG,MAAOjD,EACPkD,SAxFS,SAAClC,GACpBA,EAAEC,iBACFH,EAAeE,EAAEoC,cAAcH,WAyFzB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAACZ,EAAA,EAAD,CACEV,QAAQ,WACRW,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,mBACLD,MAAM,mBACNM,KAAK,WACLP,GAAG,mBACHG,MAAOoF,EACPnF,SAlGgB,SAAClC,GAC3BA,EAAEC,iBACFqH,EAAsBtH,EAAEoC,cAAcH,WAmGhC,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEV,QAAQ,WACRa,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,KAAK,QACLC,MAAOsE,EACPrE,SAjGM,SAAClC,GACjBA,EAAEC,iBACFwH,EAAYzH,EAAEoC,cAAcH,WAkGtB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAACZ,EAAA,EAAD,CACEV,QAAQ,WACRa,WAAS,EACTC,GAAG,YACHC,MAAM,aACNC,KAAK,YACLC,MAAOoE,EACPnE,SApHU,SAAClC,GACrBA,EAAEC,iBACFsH,EAAgBvH,EAAEoC,cAAcH,WAqH1B,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAACZ,EAAA,EAAD,CACEV,QAAQ,WACRa,WAAS,EACTC,GAAG,WACHC,MAAM,YACNC,KAAK,WACLC,MAAOqE,EACPpE,SA3HS,SAAClC,GACpBA,EAAEC,iBACFuH,EAAexH,EAAEoC,cAAcH,WA4HzB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,2BAAOoG,QAAQ,QAAf,mBADF,IACgD,6BAC9C,2BAAOxF,KAAK,OAAOL,KAAK,OAAO8F,OAAO,UAAU5F,SAxHxC,SAAClC,GACjBA,EAAEC,iBACF,IAAI8H,EAAY/H,EAAEoC,cAAc4F,MAAM,GACtC,GAAID,EAAK,CACP,IAAIE,EAAS,IAAIC,WAEjBD,EAAOE,cAAcJ,GAErBE,EAAOG,OAAS,WACZ/I,QAAQC,IAAI2I,EAAOI,QACnBX,EAAYO,EAAOI,aA+GjB,yBAAKC,IAAKnC,EAAOvC,MAAM,UAEzB,kBAACvC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAAC,EAAD,CACED,KAAK,SACLR,WAAS,EACTb,QAAQ,YACR+B,MAAM,UACNlC,UAAWnB,EAAQ8C,QALrB,cASF,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAAC,IAAD,CAAMG,GAAI,QAAQC,MAAO,CAAEC,eAAe,SAC1C,kBAAC,EAAD,CACEN,KAAK,SACLR,WAAS,EACTb,QAAQ,YACR+B,MAAM,UACNlC,UAAWnB,EAAQ8C,QALrB,kBAgBVD,EAAeK,aAAW,SAACC,GAAD,MAAY,CAC1CC,KAAM,CACJC,MAAOF,EAAMG,QAAQC,gBAAgB,WACrCC,gBAAiB,YACjB,UAAW,CACTA,gBAAiB,eALFN,CAQjBO,KAEExD,EAAYyD,aAAW,SAACP,GAAD,MAAY,CACrC/B,MAAO,CACLuC,UAAWR,EAAMtB,QAAQ,GACzB+B,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACN9B,OAAQkB,EAAMtB,QAAQ,GACtB2B,gBAAiBL,EAAMG,QAAQU,UAAUC,MAE3CxC,KAAM,CACJyC,MAAO,OACPP,UAAWR,EAAMtB,QAAQ,IAE3BiB,OAAQ,CACNb,OAAQkB,EAAMtB,QAAQ,EAAG,EAAG,GAC5B2B,gBAAiB,UACjBH,MAAO,SACPqB,WAAY,SACZP,SAAU,IAEZC,MAAO,OCnOEyE,EAAmB,uCAAG,WAAO1D,GAAP,eAAA5F,EAAA,sEAG3BI,QAAQC,IAAIuF,GAHe,SAINrG,EAAgBgK,MAAhB,wBAAuC3D,EAAK1E,QAAU0E,GAJhD,cAIvBzF,EAJuB,OAK3BC,QAAQC,IAAIF,GALe,kBAMpBA,EAASG,MANW,gCAQ3BF,QAAQC,IAAR,MAR2B,yDAAH,sDCInBmJ,EAAgD,SAAChJ,GAC1D,IAAMC,EAAUC,KAEXQ,EAAUyG,cAAVzG,OAH8D,EAKlCP,mBAAS,IALyB,mBAK9Db,EAL8D,KAKpDc,EALoD,OAMlCD,mBAAS,IANyB,mBAM9DZ,EAN8D,KAMpDc,EANoD,OAOpBF,mBAAS,IAPW,mBAO9DyH,EAP8D,KAO7CC,EAP6C,OAQhC1H,mBAAS,IARuB,mBAQ9DyG,EAR8D,KAQnDkB,EARmD,OASlC3H,mBAAS,IATyB,mBAS9D0G,EAT8D,KASpDkB,EAToD,OAUxC5H,mBAAS,IAV+B,mBAU9D2G,EAV8D,KAUvDkB,EAVuD,OAWxC7H,mBAAS,MAX+B,mBAW9DuG,EAX8D,KAWvDuB,EAXuD,KAsD7DgB,EAAU,uCAAG,WAAO1I,GAAP,qBAAAf,EAAA,yDACfe,EAAEC,iBACCjB,IAAaqI,EAFD,gBAGX9G,IAAMC,MAAM,2BAHD,2BAIJzB,IAAYU,EAAMoF,KAAKsB,OAAUA,EAJ7B,gBAKX5F,IAAMC,MAAM,uDALD,0BAMHzB,EANG,wBAOXA,EAAWU,EAAMoF,KAAK9F,SAClB4J,EAAoB,CACtBxI,SACApB,WACAC,WACAqH,YACAC,WACAC,QACAC,KAAM,OACNL,SAhBS,UAkBGoC,EAAoBI,GAlBvB,QAkBTzI,EAlBS,OAmBbT,EAAMY,QAAQC,KAAd,wBAAoCJ,EAAIC,SAnB3B,+BAqBPwI,EAAoB,CACpBxI,SACApB,WACAC,WACAqH,YACAC,WACAC,QACAC,KAAM,OACNL,SA7BO,UA+BKoC,EAAoBI,GA/BzB,QA+BPzI,EA/BO,OAgCXT,EAAMY,QAAQC,KAAd,wBAAoCJ,EAAIC,SAhC7B,4CAAH,sDAmChB,OACI,kBAACM,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACrC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWnB,EAAQoB,OACtB,kBAACC,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAAnC,uBAGA,0BAAMC,aAAa,MAAMC,SAAUwH,EAAY7H,UAAWnB,EAAQyB,KAAMC,YAAU,GAChF,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEV,QAAQ,WACRW,OAAO,SACPE,WAAS,EACTC,GAAG,WACHC,MAAM,eACNC,KAAK,WACLC,MAAOlD,EACPmD,SA9FS,SAAClC,GACpBA,EAAEC,iBACFJ,EAAeG,EAAEoC,cAAcH,WA+FzB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAACZ,EAAA,EAAD,CACEV,QAAQ,WACRW,OAAO,SACPE,WAAS,EACTG,KAAK,WACLD,MAAM,eACNM,KAAK,WACLP,GAAG,WACHG,MAAOjD,EACPkD,SAvGS,SAAClC,GACpBA,EAAEC,iBACFH,EAAeE,EAAEoC,cAAcH,WAwGzB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAACZ,EAAA,EAAD,CACEV,QAAQ,WACRW,OAAO,SACPE,WAAS,EACTG,KAAK,mBACLD,MAAM,uBACNM,KAAK,WACLP,GAAG,mBACHG,MAAOoF,EACPnF,SAhHgB,SAAClC,GAC3BA,EAAEC,iBACFqH,EAAsBtH,EAAEoC,cAAcH,WAiHhC,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEV,QAAQ,WACRa,WAAS,EACTC,GAAG,QACHC,MAAM,eACNC,KAAK,QACLC,MAAOsE,EACPrE,SA3GM,SAAClC,GACjBA,EAAEC,iBAC4B,KAA1BD,EAAEoC,cAAcH,OAChBwF,EAAYzH,EAAEoC,cAAcH,WA2G1B,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAACZ,EAAA,EAAD,CACEV,QAAQ,WACRa,WAAS,EACTC,GAAG,YACHC,MAAM,oBACNC,KAAK,YACLC,MAAOoE,EACPnE,SAlIU,SAAClC,GACrBA,EAAEC,iBAC4B,KAA1BD,EAAEoC,cAAcH,OAChBsF,EAAgBvH,EAAEoC,cAAcH,WAkI9B,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAACZ,EAAA,EAAD,CACEV,QAAQ,WACRa,WAAS,EACTC,GAAG,WACHC,MAAM,mBACNC,KAAK,WACLC,MAAOqE,EACPpE,SAvIS,SAAClC,GACpBA,EAAEC,iBAC4B,KAA1BD,EAAEoC,cAAcH,OAChBuF,EAAexH,EAAEoC,cAAcH,WAuI7B,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,2BAAOoG,QAAQ,QAAf,0BADF,IACuD,6BACrD,2BAAOxF,KAAK,OAAOL,KAAK,OAAO8F,OAAO,UAAU5F,SAhIxC,SAAClC,GACjBA,EAAEC,iBACF,IAAI8H,EAAY/H,EAAEoC,cAAc4F,MAAM,GAClCC,EAAS,IAAIC,WACjBD,EAAOE,cAAcJ,GACrBE,EAAOG,OAAS,WACZ/I,QAAQC,IAAI2I,EAAOI,QACnBX,EAAYO,EAAOI,YA0Hf,yBAAKC,IAAKnC,EAAOvC,MAAM,UAEzB,kBAACvC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAAC,GAAD,CACED,KAAK,SACLR,WAAS,EACTb,QAAQ,YACR+B,MAAM,UACNlC,UAAWnB,EAAQ8C,QALrB,YASF,kBAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIa,GAAI,GACrB,kBAAC,IAAD,CAAMG,GAAI,QAAQC,MAAO,CAAEC,eAAe,SAC1C,kBAAC,GAAD,CACEN,KAAK,SACLR,WAAS,EACTb,QAAQ,YACR+B,MAAM,UACNlC,UAAWnB,EAAQ8C,QALrB,kBAgBVD,GAAeK,aAAW,SAACC,GAAD,MAAY,CAC1CC,KAAM,CACFC,MAAOF,EAAMG,QAAQC,gBAAgB,WACrCC,gBAAiB,YACjB,UAAW,CACTA,gBAAiB,eALJN,CAQjBO,KACExD,GAAYyD,aAAW,SAACP,GAAD,MAAY,CACrC/B,MAAO,CACLuC,UAAWR,EAAMtB,QAAQ,GACzB+B,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACN9B,OAAQkB,EAAMtB,QAAQ,GACtB2B,gBAAiBL,EAAMG,QAAQU,UAAUC,MAE3CxC,KAAM,CACJyC,MAAO,OACPP,UAAWR,EAAMtB,QAAQ,IAE3BiB,OAAQ,CACNb,OAAQkB,EAAMtB,QAAQ,EAAG,EAAG,GAC5B2B,gBAAiB,UACjBH,MAAO,SACPqB,WAAY,SACZP,SAAU,IAEZC,MAAO,OC9OE8E,GAAe,uCAAG,4BAAA3J,EAAA,+EAEFT,EAAgBqK,OAAO,WAFrB,cAEnBzJ,EAFmB,OAGvBC,QAAQC,IAAIF,GAHW,kBAIhBA,EAASG,MAJO,uCAMvBF,QAAQC,IAAR,MANuB,kBAOf,oBAPe,yDAAH,qDCSfwJ,GAAmD,SAACrJ,GAC7D,IAAMC,EAAUC,KAEVoJ,EAAU,uCAAG,WAAO/I,GAAP,eAAAf,EAAA,6DACfe,EAAEC,iBADa,SAGC2I,KAHD,OAGX1I,EAHW,OAIfb,QAAQC,IAAIY,GACZT,EAAMW,kBAAkBF,GACxBT,EAAMY,QAAQC,KAAd,SANe,2CAAH,sDAShB,OACI,kBAACG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACrC,kBAACC,EAAA,EAAD,MACE,yBAAKC,UAAWnB,EAAQoB,OACtB,kBAACC,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAAnC,qCAGA,kBAACK,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACZ,kBAAC0B,EAAA,EAAD,CACGd,KAAK,SACLR,WAAS,EACTb,QAAQ,YACR+B,MAAM,UACNlC,UAAWnB,EAAQ8C,OACnBuC,QAASgE,GANZ,eAiBTpJ,GAAYyD,aAAW,SAACP,GAAD,MAAY,CACrC/B,MAAO,CACLuC,UAAWR,EAAMtB,QAAQ,GACzB+B,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACN9B,OAAQkB,EAAMtB,QAAQ,GACtB2B,gBAAiBL,EAAMG,QAAQU,UAAUC,MAE3CxC,KAAM,CACJyC,MAAO,OACPP,UAAWR,EAAMtB,QAAQ,IAE3BiB,OAAQ,CACNb,OAAQkB,EAAMtB,QAAQ,EAAG,EAAG,GAC5B2B,gBAAiB,QACjBH,MAAO,SACPc,SAAU,QC1BDmF,OAtBf,WAAgB,IAAD,EAC4BpJ,mBAAsB,MADlD,mBACNqJ,EADM,KACO7I,EADP,KAGb,OACE,yBAAKS,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAiBgE,KAAMoE,IAEvB,kBAAC,IAAD,CAAOC,KAAK,QAAQxI,UAAWuG,IAE/B,kBAAC,IAAD,CAAOiC,KAAK,SAASC,OAAQ,SAAC1J,GAAD,OAAU,kBAAC,EAAD,eAAgBW,kBAAmBA,GAAuBX,OACjG,kBAAC,IAAD,CAAOyJ,KAAK,wBAAwBxI,UAAW+F,IAC/C,kBAAC,IAAD,CAAOyC,KAAK,uBAAuBC,OAAQ,SAAC1J,GAAD,OAAU,kBAAC,EAAD,eAAwBoF,KAAMoE,GAAiBxJ,OACpG,kBAAC,IAAD,CAAOyJ,KAAK,YAAYC,OAAQ,SAAC1J,GAAD,OAAU,kBAAC,EAAD,eAAiBW,kBAAmBA,GAAuBX,OACrG,kBAAC,IAAD,CAAOyJ,KAAK,UAAUC,OAAQ,SAAC1J,GAAD,OAAU,kBAAC,GAAD,eAAiBW,kBAAmBA,GAAuBX,OACnG,8BAEF,kBAAC,IAAD,CAAgBwF,SAAS,mBCxBXP,QACW,cAA7B0E,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1J,GACLnB,QAAQmB,MAAMA,EAAM2J,a","file":"static/js/main.714135e0.chunk.js","sourcesContent":["import axios from \"axios\"\n\n//for setting up the base axios client\n//axios allows us to build an object that holds all the base information/config for our connection to server\n//thus we can call axiosObject.get /post /patch etc.\n\n//we will use this to send all requests we make to the lightlyburnding api\nexport const astrologyClient = axios.create ({\n    baseURL: 'http://localhost:2020',\n    headers:{\n        'Content-Type': 'application/json'\n    },\n    withCredentials:true\n})","import { astrologyClient } from \".\"\n\nexport const astrologyLogin = async (username: String, password: String) =>{\n    let credentials = {\n        username,\n        password\n    }\n    try {\n        let response = await astrologyClient.post('/login', credentials)\n        console.log(response);\n        return response.data //user?\n    } catch (e) {\n        console.log(e)\n        return (\"This is an error\")\n    }\n}","import React, { FunctionComponent, useState, SyntheticEvent } from \"react\"\nimport { astrologyLogin } from \"../../astrology-api/astrology-login\"\nimport { RouteComponentProps } from \"react-router\"\nimport {TextField, Button, makeStyles, Container, CssBaseline, Typography, Grid, withStyles} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\n\ninterface ILoginProps extends RouteComponentProps{\n    changeCurrentUser:(newUser:any)=>void\n}\n\nexport const LoginComponent:FunctionComponent<ILoginProps> = (props) => {\n    const classes = useStyles();\n    const [username, changeUsername] = useState(\"\")\n    const [password, changePassword] = useState(\"\")\n\n    const updatePassword = (event:any) => { \n        event.preventDefault() \n        changePassword(event.currentTarget.value) \n    }\n\n    const updateUsername = (event:any) => {\n        event.preventDefault()\n        changeUsername(event.currentTarget.value) \n    }\n    \n    const loginSubmit = async (e:SyntheticEvent) => { \n        e.preventDefault()\n        let res = await astrologyLogin(username, password) \n        console.log(res)\n        \n        if (!res.userId){\n            toast.error('Invalid Login Credentials! Please try again.')\n            props.history.push(`/login`) \n        } else {\n            props.changeCurrentUser(res) \n            props.history.push(`/user/profile/${res.userId}`) \n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n            Sign In\n            </Typography>\n            <form autoComplete=\"off\" onSubmit={loginSubmit} className={classes.form} noValidate>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"username\"\n                    label=\"Username\"\n                    name=\"username\"\n                    value={username}\n                    onChange={updateUsername}\n                />\n                </Grid>\n                <Grid item xs={12}>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={updatePassword}\n                />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                <CustomButton\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    className={classes.submit}\n                > Login\n                </CustomButton>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                <Link to= \"/home\" style={{ textDecoration:\"none\"}}>\n                <CustomButton\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    className={classes.submit}\n                > Cancel \n                </CustomButton>\n                </Link>\n                </Grid>\n            </Grid>            \n            </form>\n        </div>\n        </Container>\n        )\n    }\n    \n    \nconst CustomButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText('#ffb2e6'),\n        backgroundColor: \"'#ffb2e6'\",\n        '&:hover': {\n          backgroundColor: '#1c3041',\n        },\n    },\n  }))(Button);\n  \n//styles at the bottom because closer to html return\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(2),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: '#ffb2e6',\n        color: 'Purple',\n        fontSize: 18,\n    },\n    media: {\n\n    }\n}));","import React, { FunctionComponent, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { Link } from 'react-router-dom';\nimport { green } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({ //change color too\n  root: {\n    flexGrow: 1,\n    background: '#1c3041'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Ubuntu\"\n  },\n}));\n\nexport const NavBarComponent:FunctionComponent<any> = (props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event:any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  let menuItems = []\n  useEffect(()=>{\n      if (props.user === null){\n        menuItems = []\n        menuItems.push(\n          <Link to= \"/login\" style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>Login</MenuItem></Link>,\n          <Link to= \"/register\" style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>Sign Up</MenuItem></Link>,\n          <Link to= \"/home\" style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>Home</MenuItem></Link>)\n      }\n  })\n\n  if (props.user) {\n    menuItems.push(\n      <Link to= \"/home\" style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>Home</MenuItem></Link>,\n      <Link to={`/user/profile/${(props.user)?props.user.userId : '0' }`} style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>User Profile</MenuItem></Link>,\n      <Link to ={`/user/update/${(props.user)?props.user.userId : '0' }`} style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>Edit Account Details</MenuItem></Link>,\n      <Link to=\"/logout\" style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>Logout</MenuItem></Link>)\n  } else {\n    menuItems.push(\n      <Link to= \"/home\" style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>Home</MenuItem></Link>,\n      <Link to= \"/login\" style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>Login</MenuItem></Link>,\n      <Link to= \"/register\" style={{ textDecoration:\"none\"}}><MenuItem onClick={handleClose}>Sign Up</MenuItem></Link>\n    )\n  }\n    return (\n      <nav>\n        <AppBar position=\"static\" className={classes.root}>\n          <Toolbar>\n            <IconButton onClick={handleClick} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n              <Menu id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}> \n              {menuItems}\n              </Menu>\n            <Typography variant=\"h6\" className={classes.title}>\n              Cosmic Connections\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </nav>     \n  );\n}","import { astrologyClient } from \".\"\n\nexport const astrologyGetUserById = async (userId:number) =>{ \n    try {\n        let response = await astrologyClient.get(`/users/${userId}`)\n        return response.data\n    } catch(e) {\n        console.log(e);\n        console.log(\"We should probably handle this\");\n        \n    }\n}","import React, { FunctionComponent } from \"react\"\nimport { User } from '../../models/User'\nimport { makeStyles, Typography, CardContent, Card, CardMedia } from \"@material-ui/core\"\n\ninterface IUserDisplayProps {\n    user:User\n}\nconst useStyles = makeStyles({\n  root: {\n    margin: \"auto\",\n    minWidth: 275,\n    maxWidth:500\n  },\n  media: {\n    height:\"auto\",\n    width: \"100%\",\n    margin: \"auto\",\n  },\n  username: {\n    fontSize: 20,\n    fontFamily: \"Ubuntu\"\n  },\n  userInfo: {\n    color: \"textSecondary\",\n    fontFamily: \"Ubuntu\"\n  },\n})\n\nexport const UserDisplayComponent: FunctionComponent<IUserDisplayProps> = (props) =>{ \n    let classes = useStyles();\n    return (\n      <Card className={classes.root} >\n        <CardContent>\n        <CardMedia\n          component = \"img\"\n          className={classes.media}\n          alt=\"Profile Picture\"\n          image={props.user.image} \n        />\n          <Typography className={classes.username} gutterBottom>\n            Username : {props.user.username}\n          </Typography>\n          <Typography className={classes.userInfo}>\n            Password : {props.user.password}\n          </Typography>\n          <Typography className={classes.userInfo}>\n              First Name : {props.user.firstName}\n          </Typography>\n          <Typography className={classes.userInfo}>\n              Last Name : {props.user.lastName}\n          </Typography>\n          <Typography className={classes.userInfo}>\n              Email : {props.user.email}\n          </Typography>\n          <Typography className={classes.userInfo}>\n              Role : {props.user.role}\n          </Typography>\n        </CardContent>\n        {/* <CardActions>\n           <Button size=\"small\">Update User</Button>\n          We want this to be the button to press to update profile\n        </CardActions> */}\n      </Card>\n    );\n}","\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { User } from '../../models/User';\nimport { useParams} from 'react-router-dom'\nimport { astrologyGetUserById } from '../../astrology-api/astrology-get-user-by-id';\nimport { UserDisplayComponent } from '../UserDisplayComponent/UserDisplayComponent';\n\nexport const ProfileComponent:FunctionComponent<any> = (props) => {\n    let [userProfile, changeUserProfile] = useState<null | User>(null)\n    let {userId} = useParams()\n\n    // this will run after every single render\n    useEffect(()=>{\n        //we define an async operation we want to run\n        let getUser = async ()=>{\n            //we await user info and then call a state updat function with it\n            let userInfo = await astrologyGetUserById(userId)\n            changeUserProfile(userInfo)\n        }\n        //if we haven't gotten a user profile yet\n        if(!userProfile || userProfile.userId !== +userId){\n            //go get the user\n            getUser()\n        }\n        //else do nothing\n    })\n    \n    //why is this not working?\n    return (\n        (userProfile)?\n        <UserDisplayComponent user={userProfile} />\n        : \n        <div>\n            <h3>User Not Found</h3>\n        </div>\n    )\n}","//Done!\nimport React, { FunctionComponent } from 'react';\nimport { withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Card, CardContent, Typography, CardActions } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst SignUpButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText('#ffb2e6'),\n    backgroundColor: \"'#ffb2e6'\",\n    '&:hover': {\n      backgroundColor: '#1c3041',\n    },\n  },\n}))(Button);\n\nconst useStyles = makeStyles((theme) => ({\n  root: { //figure out spacing for this (so it's relative to screen size and centered)\n    margin: \"auto\",\n    maxWidth: 650,\n    justifyContent: \"center\",\n  },\n  text: {\n    fontFamily:\"Ubuntu\",\n    color:\"black\"\n  },\n  submit: {\n    margin: theme.spacing(1),\n    backgroundColor: '#ffb2e6',\n    color: 'purple',\n    fontFamily: \"Ubuntu\",\n    fontSize: 20,\n  }\n}));\n\nexport const HomeComponent:FunctionComponent<any> = (props) =>{\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n        {/* <CardMedia  /> \n        Insert zodiac image here!*/}\n        <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.text}>\n                By the Stars!                 \n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" className={classes.text}>\n                \"Learn more about those around you by harnessing the cosmic powers of old!\n                Compare your charts, find your compatibility.\"            </Typography>\n        </CardContent>\n        <CardActions className={classes.root}>\n            <Link to= \"/register\" style={{ textDecoration:\"none\"}}><SignUpButton variant=\"contained\" className={classes.submit}>\n              Register Now!\n            </SignUpButton></Link>  \n             or  <Link to=\"/login\" className={classes.text}>Login</Link>\n        </CardActions>\n    </Card>\n  )\n}","import { astrologyClient } from \".\";\nimport { User } from \"../models/User\";\n\nexport const astrologySignUp = async (user:User) => {\n    \n    try{\n        console.log(user)\n        let response = await astrologyClient.post('/register', user) //for the registration endpoint \n        console.log(response);\n        return response.data\n    } catch(e){\n        console.log(e);\n        //insert error\n    }\n}","import React, { FunctionComponent, SyntheticEvent, useState } from \"react\";\nimport { Button, TextField, withStyles, makeStyles, Container, CssBaseline, Typography, Grid } from \"@material-ui/core\";\nimport { astrologySignUp } from \"../../astrology-api/astrology-sign-up\";\nimport { User } from \"../../models/User\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport {toast} from 'react-toastify'\n\ninterface ISignInProps extends RouteComponentProps{\n    changeCurrentUser:(newUser:any)=>void\n}\n\nexport const SignUpComponent:FunctionComponent<ISignInProps> = (props) =>{\n    const classes = useStyles();\n\n    let [username, changeUsername] = useState(\"\") \n    let [password, changePassword] = useState(\"\")\n    let [confirmPassword, changeConfirmPassword] = useState(\"\")\n    let [firstName, changeFirstName] = useState(\"\")\n    let [lastName, changeLastName] = useState(\"\")\n    let [email, changeEmail] = useState(\"\")\n    let [image, changeImage] = useState(null)\n\n    const updateUsername = (e:any) => {\n        e.preventDefault()\n        changeUsername(e.currentTarget.value)\n    }\n    const updatePassword = (e:any) => {\n        e.preventDefault()\n        changePassword(e.currentTarget.value)\n    }\n    const updateConfirmPassword = (e:any) => {\n        e.preventDefault()\n        changeConfirmPassword(e.currentTarget.value)\n    }\n    const updateFirstName = (e:any) => {\n        e.preventDefault()\n        changeFirstName(e.currentTarget.value)\n    }\n    const updateLastName = (e:any) => {\n        e.preventDefault()\n        changeLastName(e.currentTarget.value)\n    } \n    const updateEmail = (e:any) => {\n        e.preventDefault()\n        changeEmail(e.currentTarget.value)\n    }\n    const updateImage = (e:any) => {\n        e.preventDefault()\n        let file:File = e.currentTarget.files[0]\n        if (file){\n          let reader = new FileReader()\n          //start an async function on reader object\n          reader.readAsDataURL(file)\n          //set a callback for when it's done reading\n          reader.onload = () =>{\n              console.log(reader.result); //to see binary representation of the image\n              changeImage(reader.result)\n          }\n        }\n    }\n    const submitUser = async (e:SyntheticEvent) => {\n        e.preventDefault() // always have to prevent default of refreshing the page\n        if(password !== confirmPassword){\n            toast.error('Entered Passwords Do Not Match!')\n        } else {\n            let newUser: User = { //assign values to new user\n                userId: 0,\n                username,\n                password,\n                firstName,\n                lastName,\n                email,\n                //should this be \"user\"?\n                role: \"user\", //changed roles to just be strings\n                image //need to add to models and user router!!!\n            }\n            let res = await astrologySignUp(newUser) //return a new user\n            props.changeCurrentUser(res) //change current user\n            props.history.push(`/user/profile/${res.userId}`) //send too profile page (or elsewhere?)\n        }\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n          </Typography>\n          <form autoComplete=\"off\" onSubmit={submitUser} className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={updateUsername}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={updatePassword}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"confirm-password\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"confirm-password\"\n                  value={confirmPassword}\n                  onChange={updateConfirmPassword}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={updateEmail}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  name=\"firstName\"\n                  value={firstName}\n                  onChange={updateFirstName}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  value={lastName}\n                  onChange={updateLastName}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <label htmlFor=\"file\">Profile Picture</label> <br/>\n                <input type=\"file\" name=\"file\" accept=\"image/*\" onChange={updateImage} />\n                <img src={image} width=\"100%\"/>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <CustomButton\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                > Register\n                </CustomButton>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Link to= \"/home\" style={{ textDecoration:\"none\"}}>\n                <CustomButton\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                > Cancel \n                </CustomButton>\n                </Link>\n              </Grid>\n            </Grid>            \n          </form>\n        </div>\n      </Container>\n    )\n}\nconst CustomButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText('#ffb2e6'),\n    backgroundColor: \"'#ffb2e6'\",\n    '&:hover': {\n      backgroundColor: '#1c3041',\n    },\n  },\n}))(Button);\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(6),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      backgroundColor: '#ffb2e6',\n      color: 'purple',\n      fontFamily: \"Ubuntu\",\n      fontSize: 18\n    },\n    media: {\n    }\n}));","import { astrologyClient } from \".\";\nimport { User } from \"../models/User\";\n\nexport const astrologyUpdateUser = async (user:User) => {\n    \n    try{\n        console.log(user)\n        let response = await astrologyClient.patch(`/users/update/${user.userId}`, user) //for the update endpoint\n        console.log(response);\n        return response.data\n    } catch(e){\n        console.log(e);\n        //insert error\n    }\n}","import React, { FunctionComponent, SyntheticEvent, useState } from \"react\";\nimport { Button, TextField, makeStyles, Container, CssBaseline, Typography, Grid, withStyles } from \"@material-ui/core\";\nimport { astrologyUpdateUser } from \"../../astrology-api/astrology-update-user\";\nimport { User } from \"../../models/User\";\nimport { Link, useParams, RouteComponentProps } from 'react-router-dom';\nimport {toast} from 'react-toastify'\n\nexport const UpdateProfileComponent:FunctionComponent<any> = (props) =>{\n    const classes = useStyles();\n\n    let {userId} = useParams()\n\n    let [username, changeUsername] = useState(\"\") \n    let [password, changePassword] = useState(\"\")\n    let [confirmPassword, changeConfirmPassword] = useState(\"\")\n    let [firstName, changeFirstName] = useState(\"\")\n    let [lastName, changeLastName] = useState(\"\")\n    let [email, changeEmail] = useState(\"\")\n    let [image, changeImage] = useState(null)\n\n    const updateUsername = (e:any) => {\n        e.preventDefault()\n        changeUsername(e.currentTarget.value)\n    }\n    const updatePassword = (e:any) => {\n        e.preventDefault()\n        changePassword(e.currentTarget.value)\n    }\n    const updateConfirmPassword = (e:any) => {\n        e.preventDefault()\n        changeConfirmPassword(e.currentTarget.value)\n    }\n    const updateFirstName = (e:any) => {\n        e.preventDefault()\n        if (e.currentTarget.value !== ''){\n            changeFirstName(e.currentTarget.value)\n        } \n    }\n    const updateLastName = (e:any) => {\n        e.preventDefault()\n        if (e.currentTarget.value !== ''){\n            changeLastName(e.currentTarget.value)\n        } \n    } \n    const updateEmail = (e:any) => {\n        e.preventDefault()\n        if (e.currentTarget.value !== ''){\n            changeEmail(e.currentTarget.value)\n        } \n    }\n    const updateImage = (e:any) => {\n        e.preventDefault()\n        let file:File = e.currentTarget.files[0]\n        let reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () =>{\n            console.log(reader.result);\n            changeImage(reader.result) \n        }\n    }\n\n    const updateUser = async (e:SyntheticEvent) => {\n        e.preventDefault()\n        if(password !== confirmPassword){\n            toast.error('Passwords Do Not Match!')\n        } else if (username && props.user.image && !image){\n            toast.error('Please re-upload image so that file can be updated!')\n        } else if (!username){\n            username = props.user.username\n            let updatedUser: User = {\n              userId,\n              username,\n              password,\n              firstName,\n              lastName,\n              email,\n              role: \"user\",\n              image \n          }\n          let res = await astrologyUpdateUser(updatedUser) //make sure endpoint returns new user\n          props.history.push(`/user/profile/${res.userId}`) //send too profile page (or elsewhere?)\n        } else {\n            let updatedUser: User = {\n                userId,\n                username,\n                password,\n                firstName,\n                lastName,\n                email,\n                role: \"user\",\n                image \n            }\n            let res = await astrologyUpdateUser(updatedUser) //make sure endpoint returns new user\n            props.history.push(`/user/profile/${res.userId}`) //send too profile page (or elsewhere?)\n        }\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Update User Profile\n          </Typography>\n          <form autoComplete=\"off\" onSubmit={updateUser} className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"username\"\n                  label=\"New Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={updateUsername}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"password\"\n                  label=\"New Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={updatePassword}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"confirm-password\"\n                  label=\"Confirm New Password\"\n                  type=\"password\"\n                  id=\"confirm-password\"\n                  value={confirmPassword}\n                  onChange={updateConfirmPassword}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"email\"\n                  label=\"Change Email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={updateEmail}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"Change First Name\"\n                  name=\"firstName\"\n                  value={firstName}\n                  onChange={updateFirstName}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Change Last Name\"\n                  name=\"lastName\"\n                  value={lastName}\n                  onChange={updateLastName}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <label htmlFor=\"file\">Change Profile Picture</label> <br/>\n                <input type=\"file\" name=\"file\" accept=\"image/*\" onChange={updateImage} />\n                <img src={image} width=\"100%\"/>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <CustomButton\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                > Update\n                </CustomButton>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Link to= \"/home\" style={{ textDecoration:\"none\"}}>\n                <CustomButton\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                > Cancel \n                </CustomButton>\n                </Link>\n              </Grid>\n            </Grid>            \n          </form>\n        </div>\n      </Container>\n    )\n}\nconst CustomButton = withStyles((theme) => ({\n  root: {\n      color: theme.palette.getContrastText('#ffb2e6'),\n      backgroundColor: \"'#ffb2e6'\",\n      '&:hover': {\n        backgroundColor: '#1c3041',\n      },\n  },\n}))(Button);\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(6),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      backgroundColor: '#ffb2e6',\n      color: 'purple',\n      fontFamily: \"Ubuntu\",\n      fontSize: 18\n    },\n    media: {\n\n    }\n}));","import { astrologyClient } from \".\"\n\nexport const astrologyLogOut = async () =>{\n    try {\n        let response = await astrologyClient.delete('/logout')\n        console.log(response);\n        return response.data //should be null?\n    } catch (e) {\n        console.log(e)\n        return (\"This is an error\")\n    }\n}","//needs work\n\nimport React, { FunctionComponent, SyntheticEvent } from \"react\";\nimport { astrologyLogOut } from \"../../astrology-api/astrology-logout\";\nimport { Button, makeStyles, CssBaseline, Container, Typography, Grid } from \"@material-ui/core\";\nimport { RouteComponentProps } from \"react-router\";\n\ninterface ILogoutProps extends RouteComponentProps{\n    changeCurrentUser:(newUser:any)=>void\n}\n\nexport const LogOutComponent: FunctionComponent<ILogoutProps> = (props)=>{\n    const classes = useStyles();\n\n    const logoutUser = async (e: SyntheticEvent) => {\n        e.preventDefault()\n\n        let res = await astrologyLogOut()\n        console.log(res)\n        props.changeCurrentUser(res)\n        props.history.push(`/home`)\n    } \n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n          <div className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n                Are you sure you want to log out?\n            </Typography>\n            <Grid item xs={12}>\n               <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={logoutUser}\n                > Logout\n              </Button>\n            </Grid>\n          </div>\n        </Container>\n\n    )\n}\n\n//styles at the bottom because closer to html return\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      backgroundColor: 'green',\n      color: 'purple',\n      fontSize: 18,\n    },\n\n}));","import React, { useState } from 'react';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {ToastContainer} from 'react-toastify'\nimport {BrowserRouter as Router, Route} from \"react-router-dom\" //just changed name of router\n\nimport { User } from './models/User';\n\nimport { LoginComponent } from './components/LoginComponent/LoginComponent'\nimport { NavBarComponent } from './components/NavBarComponent/NavBarComponent';\nimport { ProfileComponent } from './components/ProfileComponent/ProfileComponent';\nimport { HomeComponent } from './components/HomeComponent/HomeComponent'\nimport { SignUpComponent } from './components/SignUpComponent/SignUpComponent';\nimport { UpdateProfileComponent } from './components/UpdateProfileComponent/UpdateProfileComponent';\nimport { LogOutComponent } from './components/LogoutComponent/LogoutComponent';\n\n//import { AllUsersComponent } from './components/AllUsersComponent/AllUsersComponent';\n\n\nfunction App() {\n  const [currentUser, changeCurrentUser] = useState<null | User>(null)\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBarComponent user={currentUser}/>\n        {/*Route path='/users' component={AllUsersComponent}/> */}\n        <Route path='/home' component={HomeComponent}/>\n        {/*Figure out how to make this the start up screen */}\n        <Route path='/login' render={(props)=>(<LoginComponent changeCurrentUser={changeCurrentUser} {...props} />)} />\n        <Route path='/user/profile/:userId' component={ProfileComponent}/>\n        <Route path='/user/update/:userId' render={(props)=>(<UpdateProfileComponent user={currentUser} {...props}/>)}/>\n        <Route path='/register' render={(props)=>(<SignUpComponent changeCurrentUser={changeCurrentUser} {...props} />)}/>\n        <Route path='/logout' render={(props)=>(<LogOutComponent changeCurrentUser={changeCurrentUser} {...props}/>)}/>\n        <br/>\n      </Router>\n      <ToastContainer position=\"bottom-right\"/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}